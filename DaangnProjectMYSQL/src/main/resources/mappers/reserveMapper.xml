<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "./mybatis-3-mapper.dtd" >
<mapper namespace="kr.ezen.daangn.dao.ReserveDAO">
	<!-- 저장하기! -->
	<insert id="insertReserve" parameterType="ReserveVO">
		insert into tb_reserve (boardRef, userRef, interaction)
		values (#{boardRef}, #{userRef}, #{interaction})
	</insert>
	
	<!-- 수정을 하면 조회가 애매하므로 삭제로만 하겠다. -->
	<!-- 삭제하기 -->
	<delete id="deleteReserveByboardRef" parameterType="int">
		delete from tb_reserve where boardRef = #{boardRef}
	</delete>
	
	<!-- 구매목록 보기 (이것도 우선 버튼 페이징으로 하겠다.) -->
	<select id="selectPurchaseListByUserIdx" parameterType="hashmap" resultType="DaangnMainBoardVO">
		SELECT 
			db.*
			, dc.categoryName AS categoryName
			, '판매완료' AS statusName
			, COALESCE(dlt.countLike, 0) AS countLike
			, COALESCE(cr.chatRoomCount, 0) AS chatRoomCount
		FROM 
			daangn_board db
		JOIN
			(
				SELECT
				    tr.idx AS idx,
				    tr.boardRef
				FROM
				    tb_reserve tr
				WHERE
				    tr.userRef = #{userRef} AND tr.interaction = 1
			) tr ON tr.boardRef = db.idx
		LEFT JOIN
			daangn_category dc ON dc.categoryIdx = db.categoryRef
		LEFT JOIN
		    (
		        SELECT 
		            boardIdx,
		            COUNT(*) AS countLike
		        FROM 
		            daangn_like_tb
		        GROUP BY 
		            boardIdx
		    ) dlt ON dlt.boardIdx = db.idx
		LEFT JOIN
		    (
		        SELECT 
		            boardIdx,
		            COUNT(*) AS chatRoomCount
		        FROM 
		            chatRoom
		        GROUP BY 
		            boardIdx
		    ) cr ON cr.boardIdx = db.idx
		ORDER BY
			tr.idx desc
		LIMIT #{startNo}, #{sizeOfPage}
	</select>
	
	<select id="getPurchaseListTotalCountByUserIdx" parameterType="int" resultType="int">
		SELECT
			count(*)
		FROM
		    tb_reserve tr
		WHERE
		    tr.userRef = #{userRef} AND tr.interaction = 1
	</select>
	
	<select id="getTBReserveByBoardRef" parameterType="int" resultType="ReserveVO">
		select * from tb_reserve where boardRef = #{boardRef}
	</select>
</mapper>